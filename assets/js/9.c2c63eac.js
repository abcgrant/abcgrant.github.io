(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{426:function(t,a,s){t.exports=s.p+"assets/img/Python-1.fe5fc8be.png"},427:function(t,a,s){t.exports=s.p+"assets/img/Python-2.696627b1.png"},451:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("Python基础\nAnaconda-conda常用命令")]),t._v(" "),n("h1",{attrs:{id:"python基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python基础"}},[t._v("#")]),t._v(" Python基础")]),t._v(" "),n("h2",{attrs:{id:"pyhon简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pyhon简介"}},[t._v("#")]),t._v(" Pyhon简介")]),t._v(" "),n("blockquote",[n("p",[t._v("摘自菜鸟教程")])]),t._v(" "),n("p",[t._v("Python是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言")]),t._v(" "),n("ul",[n("li",[t._v("Python是一种解释性语言：没有编译这个环节\nhttps://blog.csdn.net/zhu_xun/article/details/16921413")]),t._v(" "),n("li",[t._v("Python是交互式语言：可以在一个Python提示符"),n("code",[t._v(">>>")]),t._v("后直接执行代码")]),t._v(" "),n("li",[t._v("Python是面向对象语言：Python支持面向对象的风格或代码封装在对象的编程技术")])]),t._v(" "),n("h3",{attrs:{id:"python的发展历史"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#python的发展历史"}},[t._v("#")]),t._v(" Python的发展历史")]),t._v(" "),n("p",[t._v("Python 是由 Guido van Rossum 在八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。")]),t._v(" "),n("p",[t._v("Python 本身也是由诸多其他语言发展而来的,这包括 ABC、Modula-3、C、C++、Algol-68、SmallTalk、Unix shell 和其他的脚本语言等等。")]),t._v(" "),n("p",[t._v("像 Perl 语言一样，Python 源代码同样遵循 GPL(GNU General Public License)协议。")]),t._v(" "),n("p",[t._v("现在 Python 是由一个核心开发团队在维护，Guido van Rossum 仍然占据着至关重要的作用，指导其进展。")]),t._v(" "),n("h2",{attrs:{id:"基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),n("h3",{attrs:{id:"语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),n("h4",{attrs:{id:"标识符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),n("blockquote",[n("p",[t._v("标识符（IDentifier）是指用来标识某个实体的一个符号。在不同的应用环境下有不同的含义。\n在日常生活中，标识符是用来指定某个东西、人，要用到它，他或她的名字；在数学中解方程时，我们也常常用到这样或那样的变量名或函数名；\n在编程语言中，标识符是用户编程时使用的名字，对于变量、常量、函数、语句块也有名字；我们统统称之为标识符。https://www.php.cn/python-tutorials-426455.html")])]),t._v(" "),n("p",[t._v("在 Python 里，标识符由字母、数字、下划线组成。")]),t._v(" "),n("p",[t._v("在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。")]),t._v(" "),n("p",[t._v("Python 中的标识符是区分大小写的。")]),t._v(" "),n("p",[t._v("以下划线开头的标识符是有特殊意义的。以单下划线开头 "),n("code",[t._v("_foo")]),t._v(" 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入。")]),t._v(" "),n("p",[t._v("以双下划线开头的 "),n("code",[t._v("__foo")]),t._v(" 代表类的私有成员，以双下划线开头和结尾的 "),n("code",[t._v("__foo__")]),t._v(" 代表 Python 里特殊方法专用的标识，如 "),n("code",[t._v("__init__()")]),t._v("代表类的构造函数。")]),t._v(" "),n("p",[t._v("Python 可以同一行显示多条语句，方法是用分号 ; 分开")]),t._v(" "),n("h3",{attrs:{id:"关键字和保留字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关键字和保留字"}},[t._v("#")]),t._v(" 关键字和保留字")]),t._v(" "),n("p",[n("img",{attrs:{src:s(426),alt:"Python保留字"}})]),t._v(" "),n("h3",{attrs:{id:"变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),n("h4",{attrs:{id:"命名规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命名规则"}},[t._v("#")]),t._v(" 命名规则")]),t._v(" "),n("ol",[n("li",[t._v("见名知意")])]),t._v(" "),n("p",[t._v("起一个有意义的名字，尽量做到看一眼就知道是什么意思(提高代码可读性) 比如: 名字可以定义为name , 定义学生可以使用student。")]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("驼峰命名法")])]),t._v(" "),n("p",[t._v("小驼峰式命名法（lower camel case）： 第一个单词以小写字母开始；第二个单词的首字母大写，例如：myName、aDog")]),t._v(" "),n("p",[t._v("大驼峰式命名法（upper camel case）： 每一个单字的首字母都采用大写字母，例如：FirstName、LastName")]),t._v(" "),n("p",[n("img",{attrs:{src:s(427),alt:"Python命名方法"}})]),t._v(" "),n("h3",{attrs:{id:"数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),n("h4",{attrs:{id:"标准数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#标准数据类型"}},[t._v("#")]),t._v(" 标准数据类型")]),t._v(" "),n("ul",[n("li",[t._v("Number（int、float、bool、complex（复数））")]),t._v(" "),n("li",[t._v("String")]),t._v(" "),n("li",[t._v("List")]),t._v(" "),n("li",[t._v("Tuple")]),t._v(" "),n("li",[t._v("Set")]),t._v(" "),n("li",[t._v("Dictionary")])]),t._v(" "),n("p",[t._v("其中：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("不可变数据：Number、String、Tuple")])]),t._v(" "),n("li",[n("p",[t._v("可变数据：List、Dictionary、Set")])]),t._v(" "),n("li",[n("p",[t._v("用type(),isinstance(a, int)判断\nisinstance 和 type 的区别在于：\ntype()不会认为子类是一种父类类型。\nisinstance()会认为子类是一种父类类型。")])]),t._v(" "),n("li",[n("p",[t._v("Python 使用反斜杠 "),n("code",[t._v("\\")]),t._v(" 转义特殊字符，如果你不想让反斜杠发生转义，可以在字符串前面添加一个 "),n("code",[t._v("r")]),t._v("，表示原始字符串")])]),t._v(" "),n("li",[n("p",[t._v("string、list 和 tuple 都属于 sequence（序列）")])]),t._v(" "),n("li",[n("p",[t._v("set可以进行集合运算")]),t._v(" "),n("ul",[n("li",[n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abracadabra'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alacazam'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a 和 b 的差集")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a 和 b 的并集")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a 和 b 的交集")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a 和 b 中不同时存在的元素")]),t._v("\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("字典（dictionary）是Python中另一个非常有用的内置数据类型。\n列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。\n字典是一种映射类型，字典用 "),n("code",[t._v("{ }")]),t._v(" 标识，它是一个无序的 键(key) : 值(value) 的集合。\n键(key)必须使用不可变类型。\n在同一个字典中，键(key)必须是唯一的。")])]),t._v(" "),n("li",[n("p",[t._v("字典的关键字必须为不可变类型，且不能重复。")])])]),t._v(" "),n("h3",{attrs:{id:"操作符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[t._v("#")]),t._v(" 操作符")]),t._v(" "),n("ol",[n("li",[t._v("标准算术操作符如："),n("code",[t._v("+")]),t._v(" "),n("code",[t._v("-")]),t._v(" "),n("code",[t._v("*")]),t._v(" "),n("code",[t._v("/")]),t._v("(浮点数) "),n("code",[t._v("//")]),t._v("(整数) "),n("code",[t._v("%")]),t._v(" "),n("code",[t._v("**")])]),t._v(" "),n("li",[t._v("比较操作符如："),n("code",[t._v(">")]),t._v(" "),n("code",[t._v("<")]),t._v(" "),n("code",[t._v(">=")]),t._v(" "),n("code",[t._v("<=")]),t._v(" "),n("code",[t._v("==")]),t._v(" "),n("code",[t._v("!=")])]),t._v(" "),n("li",[t._v("逻辑操作符如："),n("code",[t._v("and")]),t._v(" "),n("code",[t._v("or")]),t._v(" "),n("code",[t._v("not")])]),t._v(" "),n("li",[t._v("位运算符")]),t._v(" "),n("li",[t._v("赋值运算符")]),t._v(" "),n("li",[t._v("成员运算符")]),t._v(" "),n("li",[t._v("身份运算符")]),t._v(" "),n("li",[t._v("运算符优先级")])]),t._v(" "),n("h3",{attrs:{id:"语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[t._v("#")]),t._v(" 语句")]),t._v(" "),n("ol",[n("li",[t._v("条件控制if")]),t._v(" "),n("li",[t._v("循环控制while")]),t._v(" "),n("li",[t._v("循环控制for")])]),t._v(" "),n("h3",{attrs:{id:"迭代器与生成器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#迭代器与生成器"}},[t._v("#")]),t._v(" 迭代器与生成器")]),t._v(" "),n("h3",{attrs:{id:"函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),n("h3",{attrs:{id:"类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[t._v("#")]),t._v(" 类")]),t._v(" "),n("h1",{attrs:{id:"anaconda"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anaconda"}},[t._v("#")]),t._v(" Anaconda")]),t._v(" "),n("h2",{attrs:{id:"anaconda-conda常用命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anaconda-conda常用命令"}},[t._v("#")]),t._v(" Anaconda-conda常用命令")]),t._v(" "),n("h3",{attrs:{id:"查看已经安装的包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查看已经安装的包"}},[t._v("#")]),t._v(" 查看已经安装的包")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("conda "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),t._v("\n")])])]),n("h3",{attrs:{id:"安装和更新"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装和更新"}},[t._v("#")]),t._v(" 安装和更新")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("conda install requests\nconda install package"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("version\nconda update requests\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新所有库")]),t._v("\nconda update "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新自身")]),t._v("\nconda update conda\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新anaconda")]),t._v("\nconda update anaconda\nconda update anaconda"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("navigator\n")])])]),n("h3",{attrs:{id:"anaconda换源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anaconda换源"}},[t._v("#")]),t._v(" anaconda换源")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("conda config "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("add channels https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("mirrors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tuna"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tsinghua"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("anaconda"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pkgs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("free"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示源地址")]),t._v("\nconda config "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),t._v(" show_channel_urls yes\n")])])]),n("h3",{attrs:{id:"虚拟环境相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟环境相关"}},[t._v("#")]),t._v(" 虚拟环境相关")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建虚拟环境")]),t._v("\nconda create "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n your_env_name python"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.7")]),t._v("、"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),t._v("等"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconda create "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n py36 python"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看虚拟环境")]),t._v("\nconda env "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),t._v("\nconda info "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除环境")]),t._v("\nconda remove "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n your_env_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("虚拟环境名称"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 激活环境")]),t._v("\nLinux"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  source activate your_env_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("虚拟环境名称"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nWindows"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" activate your_env_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("虚拟环境名称"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nactivate py36\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 退出环境")]),t._v("\nLinux"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" source deactivate\nWindows"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deactivate\ndeactivate\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除环境中的某个包")]),t._v("\nconda remove "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name your_env_name  package_name\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用到notebook")]),t._v("\nconda install ipykernel\npython "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m ipykernel install "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("user "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("py37\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);